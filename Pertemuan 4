#swap function
var1 = 1
var2 = 2
var1, var2 = var2, var1
print(var1,var2)
2 1

Latihan1
var1 = 1
var2 = 2
var3 = 3
var1, var2, var3 = var3, var2, var1
print(var1,var2, var3)
3 2 1

list = [25,21,22,24,23,27,26]
def bubblesort(list):
  LastElementIndex = len(list)-1
  for passNo in range(LastElementIndex,0,-1):
    for idx in range(passNo):
      if list[idx]>list[idx+1]:
        list[idx],list[idx+1] = list[idx+1],list[idx]
  return list

bubblesort(list)
[21, 22, 23, 24, 25, 26, 27]

Latihan2
list = [100,20,60,90,40,30,10]

def bubblesort(list):
  LastElementIndex = len(list)-1
  for passNo in range(LastElementIndex,0,-1):
    for idx in range(passNo):
      if list[idx]>list[idx+1]:
        list[idx],list[idx+1] = list[idx+1],list[idx]
  return list
bubblesort(list)
[10, 20, 30, 40, 60, 90, 100]


list = [35,31,32,34,33,37,36]
def InsertionSort(list):
  for i in range(1, len(list)):
    j = i-1
    next = list[i]

    while(list[j] > next) and (j >= 0):
      list[j+1] = list[j]
      j = j-1
    list[j+1] = next
  return list
[31, 32, 33, 34, 35, 36, 37]

Latihan3
list = [89,12,57,16,25,11,75]
def InsertionSort(list):
  for i in range(1, len(list)):
    j = i-1
    next = list[i]

    while(list[j] > next) and (j >= 0):
      list[j+1] = list[j]
      j = j-1
    list[j+1] = next
  return list

InsertionSort(list)
print(list)
[11, 12, 16, 25, 57, 75, 89]


list = [70,15,25,19,34,44]
def selectionsort(list):
  for fill_slot in range(len(list) - 1, 0, -1):
    max_index = 0
    for location in range(1, fill_slot + 1):
      if list[location] > list[max_index]:
        max_index = location
    list[fill_slot],list[max_index] = list[max_index], list[fill_slot]
  return list
selectionsort(list)
[15, 19, 25, 34, 44, 70]


Latihan4
list = [89,12,57,16,25]
def selectionsort(list):
  for fill_slot in range(len(list) - 1, 0, -1):
    max_index = 0
    for location in range(1, fill_slot + 1):
      if list[location] > list[max_index]:
        max_index = location
    list[fill_slot],list[max_index] = list[max_index], list[fill_slot]
  return list

selectionsort(list)
print(list)
[12, 16, 25, 57, 89]


list = [12,33,11,99,22,55,90]
def linearsearch(list, item):
  index = 0
  found = False

  while index < len(list) and found is False:
    if list[index] == item:
      found = True
    else:
      index = index + 1
  return found

print(linearsearch(list, 12))
print(linearsearch(list, 91))
TRUE
FALSE

Latihan5
list = ['y' ,'u' ,'i' ,'w' ,'o' ,'a' ,'q' ,'u' ,'j' , 'p']

def linearsearch(list, item):
  index = 0
  found = False

  while index < len(list) and found is False:
    if list[index] == item:
      found = True
    else:
      index = index + 1
  return found
print(linearsearch(list, 'a'))
True


list = [12,33,11,99,22,55,90]
def BinarySearch(list, item):
  first = 0
  last = len(list)-1
  found = False

  while first <= last and not found:
    midpoint = (first + last)//2
    if list[midpoint] == item:
      found = True
    else:
      if item < list[midpoint]:
        last = midpoint - 1
      else:
        first = midpoint + 1
  return found
print(BinarySearch(list, 12))
print(Binarysearch(list,91))
TRUE
FALSE

Latihan6
list = ['y','a','i','w','o','q','u','j','p']
def BinarySearch(list, item):
  first = 0
  last = len(list)-1
  found = False

  while first<=last and not found:
    midpoint = (first + last)//2
    if list[midpoint] == item:
      found = True
    else:
      if item < list[midpoint]:
        last = midpoint-1
      else:
        first = midpoint+1
  return found
print(BinarySearch(list, 'a'))
TRUE

list = [12,33,11,99,22,55,90]
def IntPolsearch(list,x):
  idx0 = 0
  idxn = (len(list) -1)
  found = False
  while idx0 <= idxn and x >= list[idx0] and x <= list [idxn]:

      mid = idx0 + int(((float (idxn - idx0 )/(list[idxn] - list[idx0])) * (x - list[idx0])))

      if list[mid] == x:
        found = True
        return found

      if list[mid] < x:
          idx0 = mid + 1
  return found
print(IntPolsearch(list, 12))
print(IntPolsearch(list,91))
TRUE
FALSE

Latihan7
list = ['y','a','i','w','o','q','u','j','p']
def IntPolsearch(list,x):
  idx0 = 0
  idxn = (len(list) -1)
  found = True
  while idx0 <= idxn and x >= list[idx0] and x <= list [idxn]:

      mid = idx0 + int(((float (idxn - idx0 )/(list[idxn] - list[idx0])) * (x - list[idx0])))

      if list[mid] == x:
        found = True
        return found

      if list[mid] < x:
          idx0 = mid + 1
  return found
print(IntPolsearch(list, 'a'))
